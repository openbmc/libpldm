{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19ad130e_56419041",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 1158,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-14T01:41:43Z",
      "side": 1,
      "message": "Can you please rebase this patch on top of [libpldm: Introduce LIBPLDM_CC_COUNTED_BY()](https://gerrit.openbmc.org/c/openbmc/libpldm/+/73665) and then annotate this flexible array?\n\n```\nuint8_t event_data[] LIBPLDM_CC_COUNTED_BY(event_data_length)\n```",
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fd7b6f5_f4491052",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 5
      },
      "lineNbr": 1158,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-08-14T04:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19ad130e_56419041",
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4ba1697_bc8b7bd1",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2876,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-14T01:41:43Z",
      "side": 1,
      "message": "Thanks for the comment, however can you please fix the whitespace?",
      "range": {
        "startLine": 2874,
        "startChar": 1,
        "endLine": 2876,
        "endChar": 7
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c2a47ef_ae5e0a71",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2876,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-08-14T04:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4ba1697_bc8b7bd1",
      "range": {
        "startLine": 2874,
        "startChar": 1,
        "endLine": 2876,
        "endChar": 7
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c55e2ae2_3d941d2e",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2877,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-14T01:41:43Z",
      "side": 1,
      "message": "`!\u003d` is too strict. It\u0027s fine if the buffer is over-allocated. We just want `\u003c`.",
      "range": {
        "startLine": 2877,
        "startChar": 23,
        "endLine": 2877,
        "endChar": 25
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ba8093f_3318abb2",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2877,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-08-14T04:49:39Z",
      "side": 1,
      "message": "We want `cper_event_length \u003c (event_data_length - PLDM_PLATFORM_CPER_EVENT_MIN_LENGTH)` to avoid overflow. So this check should be `cper_event_length \u003e (event_data_length - PLDM_PLATFORM_CPER_EVENT_MIN_LENGTH)`",
      "parentUuid": "c55e2ae2_3d941d2e",
      "range": {
        "startLine": 2877,
        "startChar": 23,
        "endLine": 2877,
        "endChar": 25
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d2cccd_b39fab64",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2877,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-14T05:42:40Z",
      "side": 1,
      "message": "We\u0027re reading from `event_data` and writing to `cper_event-\u003edata`. We\u0027re reading `cper_event-\u003eevent_data_length` from `event_data`, so we need\n\n```\ncper_event-\u003eevent_data_length \u003c\u003d (event_data_length - PLDM_PLATFORM_CPER_EVENT_MIN_LENGTH) \u003c\u003d (cper_event_length - sizeof(*cper_event))\n```\n\nto hold. If it doesn\u0027t hold, then we need to return an error, as we\u0027ll either perform an invalid read or an invalid write.\n\nThe check you have denies over-allocation for `cper_event`, which is _not_ a concern. _Under-allocation_ is the concern, as the result would be an out-of-bounds access.\n\nThe comparison should be `\u003c`.",
      "parentUuid": "4ba8093f_3318abb2",
      "range": {
        "startLine": 2877,
        "startChar": 23,
        "endLine": 2877,
        "endChar": 25
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceb48f51_8ef14217",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2877,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-08-14T06:36:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1d2cccd_b39fab64",
      "range": {
        "startLine": 2877,
        "startChar": 23,
        "endLine": 2877,
        "endChar": 25
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebaa9d9a_03318d35",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2907,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-14T01:41:43Z",
      "side": 1,
      "message": "This prevents the valid message data from being smaller than the provided buffer. I think the check is too strict, and should be `\u003e` instead.",
      "range": {
        "startLine": 2904,
        "startChar": 1,
        "endLine": 2907,
        "endChar": 2
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b66c7ac_7af66687",
        "filename": "src/dsp/platform.c",
        "patchSetId": 5
      },
      "lineNbr": 2907,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-08-14T04:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebaa9d9a_03318d35",
      "range": {
        "startLine": 2904,
        "startChar": 1,
        "endLine": 2907,
        "endChar": 2
      },
      "revId": "dbe4bd2711488a36fa4f754d3e0ea75d0ff276dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}