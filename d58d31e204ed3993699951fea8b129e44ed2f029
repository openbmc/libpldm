{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4be2e474_f4b9a9d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "Why? What\u0027s the motivation?",
      "range": {
        "startLine": 9,
        "startChar": 2,
        "endLine": 9,
        "endChar": 57
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c072463f_3e9a2127",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "improved commit message.",
      "parentUuid": "4be2e474_f4b9a9d1",
      "range": {
        "startLine": 9,
        "startChar": 2,
        "endLine": 9,
        "endChar": 57
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15988ba3_a0ff8c52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "Right, but why should there be?",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1c2db0_edb8924e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "improved commit message.",
      "parentUuid": "15988ba3_a0ff8c52",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bde7caf_d93197b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "What is this use case?",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 12,
        "endChar": 31
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12d41c20_6b847dc5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "improved commit message.",
      "parentUuid": "5bde7caf_d93197b7",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 12,
        "endChar": 31
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8f93734_fb058bde",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "Why this API is the best approach above all other possible approaches (and even enumeration of other possible approaches) is still missing from the description. I don\u0027t plan to merge new APIs with mysterious motivations. Can you provide some brief demonstrations how the returned opaque pointer can be used with other, existing libpldm APIs to integrate the entity node into and relate it to other structures?\n\nAlso, please try to write your commit messages as regular prose and not a bullet list.",
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76dfeb19_fcbb7bcf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "While it\u0027s important that we demonstrate there\u0027s a user of the proposed API, the justification for its existence must be entirely self-contained in the libpldm commit, either in the commit message or in documentation added in the commit.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86a94fb2_41904bbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 14,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "Libpldm is allocating memory and pldm is using this node as per pldm storing/restoring node object path into dbus, PLDM is having opaque pointer of \u0027pldm_entity_node\u0027 which can\u0027t extracted in PLDM, but it can holds the assigned pldm_entity data. using  pldm_entity pinter which will be null for other usecases and code optimization but for PLDM it will holds the pldm entity values.",
      "parentUuid": "e8f93734_fb058bde",
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcd13d47_7a0af5d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 14,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "improved commit message.",
      "parentUuid": "76dfeb19_fcbb7bcf",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ca33770_05ec9596",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "Hi Kamalkumar, I\u0027ve still got some concerns with the commit message and the API generally. Despite my concerns there, I\u0027ve also made a comment on the implementation and the test.",
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa020d5_b97cd32e",
        "filename": "src/pdr.c",
        "patchSetId": 12
      },
      "lineNbr": 1321,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "Perhaps all this would be better as:\n\n```\n    return calloc(1UL, sizeof(struct pldm_entity_node));\n```",
      "range": {
        "startLine": 1307,
        "startChar": 1,
        "endLine": 1321,
        "endChar": 13
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cd46ff6_ccf30238",
        "filename": "src/pdr.c",
        "patchSetId": 12
      },
      "lineNbr": 1321,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "acknowledge.",
      "parentUuid": "9aa020d5_b97cd32e",
      "range": {
        "startLine": 1307,
        "startChar": 1,
        "endLine": 1321,
        "endChar": 13
      },
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a0f3152_64c8db9b",
        "filename": "tests/libpldm_pdr_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1938,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-04T06:02:24Z",
      "side": 1,
      "message": "I\u0027m not convinced at test that validates a dynamic memory allocation succeeds is beneficial. It doesn\u0027t demonstrate anything about the function\u0027s behaviour in a production environment.",
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e545cbae_02253b37",
        "filename": "tests/libpldm_pdr_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1938,
      "author": {
        "id": 1001539
      },
      "writtenOn": "2024-04-08T18:11:56Z",
      "side": 1,
      "message": "agree, but since it\u0027s opaque pointer so can\u0027t extract other values to check in test case.it\u0027s gives error when i try to check structure values.",
      "parentUuid": "8a0f3152_64c8db9b",
      "revId": "d58d31e204ed3993699951fea8b129e44ed2f029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}