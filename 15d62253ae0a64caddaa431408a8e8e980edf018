{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a2e5cbe0_5cf6afe4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "No need to mention `libpldm` here - this is implicit (you\u0027re modifying its repo). Nor `C` really, as that\u0027s libpldm\u0027s implementation language. Perhaps:\n\n```\ndsp: firmware_update: Add APIs for parsing firmware packages\n```",
      "range": {
        "startLine": 7,
        "startChar": 17,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1f9407_29727bdd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T14:44:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a2e5cbe0_5cf6afe4",
      "range": {
        "startLine": 7,
        "startChar": 17,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c297908a_ebca0e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-01-27T05:31:14Z",
      "side": 1,
      "message": "can we add the SPEC table information which talks about this command?",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a063667_e9c31a5f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Yes, please be specific about which specification, its version, and the section:\n\nhttps://github.com/openbmc/libpldm/blob/fa2e26593ec961593c44391e5182a6d57a3918a6/docs/checklists/changes.md#L193-L198",
      "parentUuid": "c297908a_ebca0e6d",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a296c6f6_46db971b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "So a highly desirable feature of libpldm\u0027s APIs is they don\u0027t allocate, as it makes the library much easier to exploit in free-standing contexts. It\u0027s already the case that many of the APIs don\u0027t allocate, but I don\u0027t think we\u0027d written that desire down anywhere. To that end I\u0027ve created the following change:\n\n[docs: checklists: Document heap allocation constraint](https://gerrit.openbmc.org/c/openbmc/libpldm/+/77509)\n\nCan you please rework your design to not require heap allocation?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a82cbbc6_acc7cff8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-01-29T09:13:16Z",
      "side": 1,
      "message": "+1 to this.\n\nI think we have two options (Andrew also pointed out the same):\n1) Let caller do all the allocation (needs some assumptions about sizes or hints from the library).\n\n2) (I would prefer this) - define structures/APIs for fixed vs variable parts and have the caller invoke APIs as relevant. For example - for the header you can define a structure until the PackageVersionStringLength and have a C flexible array member for the string itself. The caller can then invoke a different API, passing in a buffer large enough to hold the string (as the caller knows the string length from the prior API call to parse the header), to retrieve the string.\nFor variable sized entries, you could do something similar and have iterators (also suggested by Andrew elsewhere in this patchset iirc) to get the next item of something (similar to how readdir() etc. work).\n\nI would also suggest looking at https://kernel.googlesource.com/pub/scm/linux/kernel/git/mark/linux/+/refs/tags/arm64-ftrace-minimal-regs-20221103/lib/pldmfw for reference. This does do iterators but doesn\u0027t expose them as APIs. I also like this in terms of the structuring of the main parsing function two four parts - parse_header, parse_records, parse_components, verify_crc. These can be the public APIs, as iterator APIs though (get_next_component, etc.).\n\n@andrew@codeconstruct.com.au does the above make sense to you? Would like to hear your thougts before we rework.",
      "parentUuid": "a296c6f6_46db971b",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4c0be40_dbd82295",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-30T03:17:08Z",
      "side": 1,
      "message": "\u003e and have a C flexible array member for the string itself.\n\nPlease be cautious about recommending flexible array members, they cause API trouble:\n\nhttps://github.com/openbmc/libpldm/blob/059684c86558a638c19a64d4f2e4c5bd9a6e87f1/docs/checklists/changes.md#L154-L173\n\n\u003e These can be the public APIs, as iterator APIs though (get_next_component, etc.).\n\nI prefer we follow the pattern I\u0027ve set with the `foreach_*` macros as they hide a lot of the pain and provide consistency.\n\nNote that the iterators I\u0027ve defined so far use a `void *` pointing back into the message buffer for string data. The caller needs to copy the string data out and parse it themselves, with their own choice of library: the encoding and alignment are defined by other struct members and I don\u0027t want libpldm to prescribe string parsing implementations for its users.",
      "parentUuid": "a82cbbc6_acc7cff8",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "351e4b5e_935485c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-01-30T06:14:31Z",
      "side": 1,
      "message": "Sounds good to me.",
      "parentUuid": "d4c0be40_dbd82295",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b010dab_b2321513",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-10T07:19:34Z",
      "side": 1,
      "message": "Modified the code for package parsing to use iterator style implementation. Please find some time to re-review it @andrew@codeconstruct.com.au @deepak.kodihalli.83@gmail.com @rushtotom@gmail.com",
      "parentUuid": "351e4b5e_935485c7",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f946f877_e7f3ebdc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-02-11T05:46:30Z",
      "side": 1,
      "message": "Ack, will get to it in a day.",
      "parentUuid": "6b010dab_b2321513",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4e12966_0fef5d17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-20T15:21:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f946f877_e7f3ebdc",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 11
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4884dee_9f6a1dfa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Hi Rajeev, thanks for the patch. I have a number of comments inline.\n\nCan you please also collaborate with Alexander, who appears to be doing work with similar motivations:\n\nhttps://gerrit.openbmc.org/c/openbmc/libpldm/+/77095",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03c8312b_c81f5fd4",
        "filename": "CHANGELOG.md",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-01-27T05:31:14Z",
      "side": 1,
      "message": "I think it should be written under #ADDED section here?",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 77,
        "endChar": 1
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c5902ce_29e64e4e",
        "filename": "CHANGELOG.md",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Yes, this should be under `### Added` above.",
      "parentUuid": "03c8312b_c81f5fd4",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 77,
        "endChar": 1
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c1fa2ad_5648d3a1",
        "filename": "CHANGELOG.md",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:28:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5c5902ce_29e64e4e",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 77,
        "endChar": 1
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10637f31_b174b432",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 5
      },
      "lineNbr": 1040,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "It\u0027s getting tricky for me to correlate how people are naming structs with structures that are defined in the specification. I realise this hasn\u0027t been done in other cases, but for each struct you\u0027ve added here can you please add the spec version along with the table number and description to your doxygen comment to make it easier for me to match them up?\n\nI\u0027m concerned that we\u0027re going to introduce types that are essentially duplicates with minor variation on naming and content.",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5160a094_87ff70f6",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 5
      },
      "lineNbr": 1040,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:59:25Z",
      "side": 1,
      "message": "Removed those struct as those were not needed with iterators.",
      "parentUuid": "10637f31_b174b432",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be243b13_423b208b",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Please prefix the name of static symbols as well, that way it\u0027s obvious in context and in backtraces where the symbols has come from. Apply this throughout.",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 38
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "293728f0_52e006ed",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:59:25Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "be243b13_423b208b",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 38
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99061c47_af3d6d25",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3103,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Please exploit the APIs provided in `src/msgbuf.h` and apply throughout the patch (i.e. all the code beyond what I\u0027ve highlighted here).\n\nhttps://github.com/openbmc/libpldm/blob/fa2e26593ec961593c44391e5182a6d57a3918a6/docs/checklists/changes.md#L158-L160",
      "range": {
        "startLine": 3095,
        "startChar": 1,
        "endLine": 3103,
        "endChar": 51
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f91031a_f90211b0",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3103,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-10T07:19:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "99061c47_af3d6d25",
      "range": {
        "startLine": 3095,
        "startChar": 1,
        "endLine": 3103,
        "endChar": 51
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1787ca97_c663c86a",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3134,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "No need to cast void pointers in C.",
      "range": {
        "startLine": 3134,
        "startChar": 36,
        "endLine": 3134,
        "endChar": 62
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fb8da44_8315d8fe",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3134,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-10T07:19:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1787ca97_c663c86a",
      "range": {
        "startLine": 3134,
        "startChar": 36,
        "endLine": 3134,
        "endChar": 62
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78988985_be7c8cb2",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3135,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Please see the comment about allocation on the commit message.",
      "range": {
        "startLine": 3134,
        "startChar": 1,
        "endLine": 3135,
        "endChar": 37
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c60a6df_b28beaca",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3135,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:59:25Z",
      "side": 1,
      "message": "Switched to iterators, so memory is not allocated anymore",
      "parentUuid": "78988985_be7c8cb2",
      "range": {
        "startLine": 3134,
        "startChar": 1,
        "endLine": 3135,
        "endChar": 37
      },
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1b1c6ba_265d04d1",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3145,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "If we were to maintain dynamic allocations, you should instead use `goto` to consolidate cleanups.",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "505d28e8_81b437f2",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3145,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:59:25Z",
      "side": 1,
      "message": "Using iterators now, so there\u0027s no dynamic memory allocation in the code.",
      "parentUuid": "c1b1c6ba_265d04d1",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ca6a67d_bffd7c26",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3171,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-01-28T05:20:02Z",
      "side": 1,
      "message": "Shouldn\u0027t we validate the checksum before trusting the data?",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aee80949_115b5e68",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 5
      },
      "lineNbr": 3171,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-07T11:59:25Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8ca6a67d_bffd7c26",
      "revId": "15d62253ae0a64caddaa431408a8e8e980edf018",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}