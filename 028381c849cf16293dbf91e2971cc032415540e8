{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "594505c4_732307e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Hi Varsha, the patch continues to improve. I still have some (different) endianness and overflow concerns. I\u0027ll also ask Manoj to respond regarding the question of the PDR repository datastructure design.",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba293a77_f9f9a138",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 27
      },
      "lineNbr": 455,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Nit: Trailing whitespace.\n\nPlease audit the rest of the patch for other instances.",
      "range": {
        "startLine": 455,
        "startChar": 88,
        "endLine": 455,
        "endChar": 89
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22036b8b_0dc806c2",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 27
      },
      "lineNbr": 457,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "This shouldn\u0027t mention host, right?",
      "range": {
        "startLine": 457,
        "startChar": 38,
        "endLine": 457,
        "endChar": 42
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cc9280a_ee0ae689",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 27
      },
      "lineNbr": 462,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Updated how? What does it mean?",
      "range": {
        "startLine": 462,
        "startChar": 39,
        "endLine": 462,
        "endChar": 46
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1de1883_768c323b",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 27
      },
      "lineNbr": 462,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Typo: `contained`",
      "range": {
        "startLine": 462,
        "startChar": 64,
        "endLine": 462,
        "endChar": 73
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada8bc4f_df0ba02e",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 27
      },
      "lineNbr": 477,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Typo: contained",
      "range": {
        "startLine": 477,
        "startChar": 68,
        "endLine": 477,
        "endChar": 77
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "757c5ce5_a740f3a4",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1348,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "The `undef` probably needs to come after its use ðŸ˜Š\n\nBut why not just leave it defined? Is this not a reasonable definition?\n\nIf we can leave it defined, just define it after the includes near the top of the file?",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a88a00_b7b9696a",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1360,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "What if `size_t` is 32-bit?",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "218d4171_ec18128c",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1370,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "This doesn\u0027t look right. What tells us `record-\u003erecord_handle` is in host-endianness, and why should it be inconsistent between `record` and `new_record`?\n\nFurther, we\u0027re not using it in any calculation, so there\u0027s no reason to care, right? Shouldn\u0027t this just be\n\n```\nnew_record-\u003erecord_handle \u003d record-\u003erecord_handle;\n```\n\n?",
      "range": {
        "startLine": 1370,
        "startChar": 29,
        "endLine": 1370,
        "endChar": 60
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5003fc7_29c71307",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1373,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "If we\u0027re storing pointers in the struct why are we encoding non-pointer values into something that\u0027s not host-endianness? You can\u0027t (sensibly) put pointers on the wire, and mixing wire data with local data is just a recipe for confusion.\n\nThis comment is unfortunately a bit broader than your patch, but needs to be resolved.",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76aec7b0_9103631e",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1393,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Needs a check for overflow.",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b92969_7da8b547",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1394,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "This can be `pldm_msgbuf_insert(dst, header_length);`, right?",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade6b420_2fc63c33",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1406,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "It would feel to me like less of a contortion to do:\n\n```\nif (num_children \u003d\u003d UINT8_MAX) {\n    rc \u003d -EOVERFLOW;\n    goto cleanup_new_record;\n}\n```\n\nIt seems more obvious that we\u0027re hit the last one?",
      "range": {
        "startLine": 1406,
        "startChar": 5,
        "endLine": 1406,
        "endChar": 34
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c35e2f81_8ebedc32",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1411,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Again, just `pldm_msgbuf_insert()` should be enough?",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973b6456_e71eee19",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1420,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "If you\u0027re going to reuse `src` here, you first need to:\n\n```\nrc \u003d pldm_msgbuf_destroy(src);\nif (rc) {\n    goto cleanup_new_record;\n}\n```\n\nOtherwise we\u0027re going to lose any overflow detection for the original buffer associated with `src`.",
      "range": {
        "startLine": 1420,
        "startChar": 23,
        "endLine": 1420,
        "endChar": 26
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "168e0a96_43e7bdbb",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1448,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Isn\u0027t this little-endian?\n\nWhat endianness is `repo-\u003esize`?",
      "range": {
        "startLine": 1448,
        "startChar": 15,
        "endLine": 1448,
        "endChar": 28
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d05e2a_b30687bb",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1449,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Same here?",
      "range": {
        "startLine": 1449,
        "startChar": 15,
        "endLine": 1449,
        "endChar": 32
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf397dd9_aa2eaeb0",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1498,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Is it not declared packed? Why are we manually adding field lengths below?",
      "range": {
        "startLine": 1498,
        "startChar": 12,
        "endLine": 1498,
        "endChar": 46
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83be7ec5_2c061e09",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1516,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "You must do the overflow check before the addition, otherwise the compiler will just delete the check.",
      "range": {
        "startLine": 1515,
        "startChar": 1,
        "endLine": 1516,
        "endChar": 47
      },
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c6559c9_cae49e37",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1527,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "Endianness",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ccdc0d_ad222074",
        "filename": "src/pdr.c",
        "patchSetId": 27
      },
      "lineNbr": 1541,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-09T05:01:32Z",
      "side": 1,
      "message": "`pldm_msgbuf_insert()`? The type information is encoded in the variable declaration.",
      "revId": "028381c849cf16293dbf91e2971cc032415540e8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}