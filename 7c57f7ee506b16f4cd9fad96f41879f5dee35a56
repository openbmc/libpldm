{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e5a90c16_88a68877",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-30T02:06:58Z",
      "side": 1,
      "message": "I prefer we don\u0027t do this. `pldm_transport_send_recv_msg()` very much a convenience API for simple use cases, though that\u0027s kind of complicated by the mctp-demux transport behaviour of all listeners receiving all messages.\n\nIf users of libpldm need to care about these problems then they should use the building blocks of `pldm_transport_send_msg()`, `pldm_transport_poll()`, and `pldm_transport_recv_msg()` to get the right behaviour.\n\nOtherwise, as is, we\u0027re discarding potentially valid messages. `AF_MCTP` will typically operate in unconnected mode, which will yield the same problems (though to a lesser extent).",
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81704eee_dfec8c75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-05-30T04:11:49Z",
      "side": 1,
      "message": "I agree that for the API such as pldm_transport_recv_msg() we don\u0027t have any info about the request message(), so the API requester should handle comparing the InstanceIds of request message (only API requester have this info) and response message.\n\nBut the purpose of pldm_transport_send_recv_msg() is send one pldm transport message and return the response message. So I think the response message should corresponding with the sent message.\nMoreover, If we don\u0027t handle that comparison then the API requester have to re-send the request and hope that the response message match with re-sent request. That mean we can miss the response of first request message.",
      "parentUuid": "e5a90c16_88a68877",
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6271ec5_4a7e70cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-30T05:01:56Z",
      "side": 1,
      "message": "Yeah, I\u0027m torn. I think I\u0027d be satisfied if we describe the drop behaviour in the doxygen comment for `pldm_transport_send_recv_msg()`.",
      "parentUuid": "81704eee_dfec8c75",
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "685eea63_b2c7dd14",
        "filename": "src/transport/transport.c",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-30T05:01:56Z",
      "side": 1,
      "message": "I don\u0027t think this local is required, we can instead reach through `hdr-\u003e...` in the condition on line 206",
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d759816c_861ccc89",
        "filename": "src/transport/transport.c",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-30T05:01:56Z",
      "side": 1,
      "message": "In C we don\u0027t need to cast to or from void, the conversion is implicit on assignment to a typed pointer. So we can drop this.",
      "range": {
        "startLine": 170,
        "startChar": 28,
        "endLine": 170,
        "endChar": 51
      },
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "884ab648_7efa13fa",
        "filename": "src/transport/transport.c",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-30T05:01:56Z",
      "side": 1,
      "message": "As above, no need for the cast in C.",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 27
      },
      "revId": "7c57f7ee506b16f4cd9fad96f41879f5dee35a56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}