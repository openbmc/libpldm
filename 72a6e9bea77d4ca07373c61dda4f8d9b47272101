{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17e1058f_52ce1bb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "Hi Matt, I have a few queries/thoughts on this one.",
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e68287e6_1c0fe029",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 2710,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "I prefer we\u0027re more specific here and list the error values along with their intent",
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41e17529_f9fbabb3",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 2715,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "I prefer we don\u0027t decompose the message this way. Was there some benefit over not defining a struct?",
      "range": {
        "startLine": 2713,
        "startChar": 52,
        "endLine": 2715,
        "endChar": 52
      },
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa3faacc_5d8ed353",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 2729,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "In general I\u0027d prefer the iterator-style approach (which I realise is somewhat tedious to implement), however if we\u0027re going to do it this way, then using a struct and a flexible array member with `LIBPLDM_CC_COUNTED_BY` at least helps the compiler catch obvious silliness?\n\nPerhaps `__counted_by_ptr()` would help eventually ( mentioned in https://social.kernel.org/objects/dd64a1d9-bb48-4bed-8a3e-bd1153b83d4a )",
      "range": {
        "startLine": 2729,
        "startChar": 1,
        "endLine": 2729,
        "endChar": 66
      },
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c0ab8da_8a56f683",
        "filename": "src/dsp/platform.c",
        "patchSetId": 1
      },
      "lineNbr": 2526,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "Needs a `NULL` check.",
      "range": {
        "startLine": 2526,
        "startChar": 28,
        "endLine": 2526,
        "endChar": 37
      },
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87b33228_73a7652a",
        "filename": "src/dsp/platform.c",
        "patchSetId": 1
      },
      "lineNbr": 2527,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "This can be `pldm_msgbuf_extract(buf, op_state_val);`",
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9591129_495bc6cf",
        "filename": "src/dsp/platform.c",
        "patchSetId": 1
      },
      "lineNbr": 2536,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "Is it necessary to use this for the return value? I prefer we use errnos going forward.",
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9793fe3_e6044a46",
        "filename": "src/dsp/platform.c",
        "patchSetId": 1
      },
      "lineNbr": 2543,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "Need `NULL` checks",
      "range": {
        "startLine": 2541,
        "startChar": 1,
        "endLine": 2543,
        "endChar": 1
      },
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a625e72_3a3dd0e2",
        "filename": "src/dsp/platform.c",
        "patchSetId": 1
      },
      "lineNbr": 2603,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-07-03T02:41:15Z",
      "side": 1,
      "message": "Similar thoughts as above on this implementation.",
      "revId": "72a6e9bea77d4ca07373c61dda4f8d9b47272101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}