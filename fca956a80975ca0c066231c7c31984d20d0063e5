{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee8b69b8_e4145424",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "Sorry, I feel like we\u0027re going around on this a bit, but we\u0027re still making progress. Having dealt with the msgbuf-related concerns, I have some more queries on the control flow.",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403c28d3_22edc4e1",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 13
      },
      "lineNbr": 259,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "This is a pointer, is it allowed to be `NULL`? I suggest we allow it, but that must be documented above.",
      "range": {
        "startLine": 259,
        "startChar": 32,
        "endLine": 259,
        "endChar": 46
      },
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bfee29e_9379038c",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 13
      },
      "lineNbr": 259,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-04-22T10:42:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "403c28d3_22edc4e1",
      "range": {
        "startLine": 259,
        "startChar": 32,
        "endLine": 259,
        "endChar": 46
      },
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b80f949_14dc2bdb",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 13
      },
      "lineNbr": 506,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "Should this be `continue` rather than a `return`?",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e187b07_11fd3b4f",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 13
      },
      "lineNbr": 506,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-04-22T10:42:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b80f949_14dc2bdb",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0fc6ce9_1e08f10c",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 13
      },
      "lineNbr": 522,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "You must ensure `record_handle` is not `NULL` before dereferencing it.",
      "range": {
        "startLine": 522,
        "startChar": 4,
        "endLine": 522,
        "endChar": 17
      },
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e8e6603_7bd893f2",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 13
      },
      "lineNbr": 522,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-04-22T10:42:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0fc6ce9_1e08f10c",
      "range": {
        "startLine": 522,
        "startChar": 4,
        "endLine": 522,
        "endChar": 17
      },
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be2ede7a_5d810e7e",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "This at least needs `ASSERT_NE(repo, nullptr);`",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "276f1326_a0b9e5c0",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-04-22T10:42:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be2ede7a_5d810e7e",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c85264_636030be",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-04-16T23:46:59Z",
      "side": 1,
      "message": "This hasn\u0027t tested any of the error paths? Can you please provide some coverage there?",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90804d1a_1f6d0232",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-04-22T10:42:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4c85264_636030be",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "980dbfa1_884854ad",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-07T03:32:43Z",
      "side": 1,
      "message": "What do you feel makes this done? What I was asking was that you look at each of the places you return an error in the implementation and provide a corresponding test for that path.\n\nAlso, please avoid single test cases that test multiple behaviours. I would like the tests to have a relationship of one behaviour to one test function (a new `TEST(...)` defined for each behaviour exercised), unless they truly are trivial (e.g. where passing `NULL` for a parameter value should result in an error value returned - anything beyond that is non-trivial).",
      "parentUuid": "90804d1a_1f6d0232",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be577e85_c3e0d5ee",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-05-09T07:11:20Z",
      "side": 1,
      "message": "Andrew, in the old patchset, I had added a test case where if the effecter ID is not found, we return, and the number of records in the repo remains the same.\n\nIn the new patchset, I have added the test case in the error scenario during the decode of the state effecter. I believe these are the two scenarios where this API could return an error. The trivial case where the parameter is `NULL` is asserted in the test case.\n\nPlease suggest to me if you think any other test case should be handled.",
      "parentUuid": "980dbfa1_884854ad",
      "revId": "fca956a80975ca0c066231c7c31984d20d0063e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}