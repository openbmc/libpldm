{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "593572d5_b32ee8db",
        "filename": "include/libpldm/requester/transport-mctp-demux.h",
        "patchSetId": 12
      },
      "lineNbr": 2,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-02-07T18:07:54Z",
      "side": 1,
      "message": "If this is for MCTP kernel socket, why call it `demux`?",
      "revId": "6f034c8a2b71138c7c0a67a1f9a50aeff9b6696d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dc53520_e58908fd",
        "filename": "include/libpldm/requester/transport-mctp-demux.h",
        "patchSetId": 12
      },
      "lineNbr": 2,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2023-02-08T05:47:36Z",
      "side": 1,
      "message": "It\u0027s not. This is the existing MCTP transport. The idea with this patch is to maintain the behaviour for all consumers of the requester API, while providing the mechanisms to add and use other transports.\n\nThe patch for adding in-kernel MCTP is the next one (https://gerrit.openbmc.org/c/openbmc/libpldm/+/59577/7). It\u0027s still marked as WIP because I haven\u0027t been able to test it with the new api yet.",
      "parentUuid": "593572d5_b32ee8db",
      "revId": "6f034c8a2b71138c7c0a67a1f9a50aeff9b6696d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb5003d6_7d4b8e25",
        "filename": "src/requester/pldm.c",
        "patchSetId": 12
      },
      "lineNbr": 58,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-02-07T18:07:54Z",
      "side": 1,
      "message": "How will this work for apps that wants to use sd_event loop?https://0pointer.net/blog/introducing-sd-event.html",
      "revId": "6f034c8a2b71138c7c0a67a1f9a50aeff9b6696d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}