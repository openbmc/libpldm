{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "35cb5c09_3c5b1b92",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 5
      },
      "lineNbr": 680,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-09-26T05:42:01Z",
      "side": 1,
      "message": "this doxygen doesn\u0027t match with the function params, please change",
      "range": {
        "startLine": 678,
        "startChar": 3,
        "endLine": 680,
        "endChar": 2
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c25c472d_9013ff52",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 5
      },
      "lineNbr": 2066,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-09-26T05:42:01Z",
      "side": 1,
      "message": "can we make this a bool API? because I believe we are just checking if a parent is found or not.",
      "range": {
        "startLine": 2066,
        "startChar": 0,
        "endLine": 2066,
        "endChar": 49
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b23a7bb_f8819aa4",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 5
      },
      "lineNbr": 2066,
      "author": {
        "id": 1000393
      },
      "writtenOn": "2024-09-26T05:52:12Z",
      "side": 1,
      "message": "Cannot make it bool since we also return -EINVAL, etc for memory access failures",
      "parentUuid": "c25c472d_9013ff52",
      "range": {
        "startLine": 2066,
        "startChar": 0,
        "endLine": 2066,
        "endChar": 49
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cd40acd_26a4ab67",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 5
      },
      "lineNbr": 2066,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2025-02-14T08:55:51Z",
      "side": 1,
      "message": "we could return false in such cases?",
      "parentUuid": "5b23a7bb_f8819aa4",
      "range": {
        "startLine": 2066,
        "startChar": 0,
        "endLine": 2066,
        "endChar": 49
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b42894c3_26cda277",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 5
      },
      "lineNbr": 2066,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-18T01:55:07Z",
      "side": 1,
      "message": "No, please keep the error handling as is.",
      "parentUuid": "6cd40acd_26a4ab67",
      "range": {
        "startLine": 2066,
        "startChar": 0,
        "endLine": 2066,
        "endChar": 49
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1d77a66_9ec17076",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2177,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-26T02:08:31Z",
      "side": 1,
      "message": "Do we not have an API for encoding a PDR? If not perhaps it would be best to add one?\n\nAt the _very_ least you need to add references to what message you\u0027re encoding and the associated message definition in the specs. Otherwise this is terribly opaque and the reader is left guessing at what you\u0027re doing.",
      "range": {
        "startLine": 2145,
        "startChar": 0,
        "endLine": 2177,
        "endChar": 38
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25064b84_8dc9c091",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2177,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-09-30T06:11:33Z",
      "side": 1,
      "message": "Hey andrew - is it a suggested practice to create a new API in the library ..just for the purpose of unit testing ?",
      "parentUuid": "c1d77a66_9ec17076",
      "range": {
        "startLine": 2145,
        "startChar": 0,
        "endLine": 2177,
        "endChar": 38
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa52e623_e665d32d",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2177,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-30T06:14:18Z",
      "side": 1,
      "message": "Well, I wouldn\u0027t want anything exposed if it doesn\u0027t make sense, but open-coding this is also not right. It needs documentation as noted above, and should probably be done as a static function in the test implementation to begin with?",
      "parentUuid": "25064b84_8dc9c091",
      "range": {
        "startLine": 2145,
        "startChar": 0,
        "endLine": 2177,
        "endChar": 38
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d9f0ba_6ba4b48a",
        "filename": "tests/dsp/pdr.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2177,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-09-30T06:25:22Z",
      "side": 1,
      "message": "ah yeah, \"not exposing it and doing it as a static function\" - that makes a lot of sense. thanks for the clarification.",
      "parentUuid": "aa52e623_e665d32d",
      "range": {
        "startLine": 2145,
        "startChar": 0,
        "endLine": 2177,
        "endChar": 38
      },
      "revId": "231d9f3fdb7a54722f6dd47428ab1994aa09d0f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}