{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "171935fe_882419e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:05:00Z",
      "side": 1,
      "message": "Ah, so it doesn\u0027t do this directly, it just provides the pointer to the string in the buffer (... and I\u0027ve added a suggestion for the length as well). Can you please rephrase this?",
      "range": {
        "startLine": 9,
        "startChar": 40,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "daa02d08_d4d61b83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "171935fe_882419e2",
      "range": {
        "startLine": 9,
        "startChar": 40,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "128df463_2693fd47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Hi Thu, I think there are just a couple more cleanups and this should be good to go. Thanks for the improvements so far.",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b330c34e_e69054ce",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1026,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Can we add a `size_t *length` argument just for completeness?\n\nIf we allow it to be `NULL` then callers don\u0027t have to bother with providing an object pointer if they don\u0027t care.",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fac96eb1_4166625d",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1026,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done. Do you want to apply this change to next patch `\nmsgbuf: Add pldm_msgbuf_span_string_utf16()`?",
      "parentUuid": "b330c34e_e69054ce",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bc1dcdc_ede904b7",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1026,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:44:58Z",
      "side": 1,
      "message": "I saw your comment in that patch set. I will update it later.",
      "parentUuid": "fac96eb1_4166625d",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6202516e_58f65878",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1028,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Might have to rename this given the `length` argument suggestion, maybe `measured`?",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb9dbac6_4f77b7d6",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1028,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6202516e_58f65878",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "668874bc_b009fb87",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1040,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Aside from the `length` argument and switching the current `length` local to `measured`, I think the only other thing we need is the underflow check here before the subtraction on line 1041:\n\n```\nif (ctx-\u003eremaining \u003c INTMAX_MIN + measured) {\n    return pldm_msgbuf_status(ctx, EOVERFLOW);\n}\n```",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a313dbb1_0991c36c",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1040,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "668874bc_b009fb87",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50aea928_75d25f0c",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1048,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Regarding the `length` argument, we then do:\n\n```\nif (length) {\n    *length \u003d measured;\n}\n```",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a0f7593_9c4b140f",
        "filename": "src/msgbuf.h",
        "patchSetId": 8
      },
      "lineNbr": 1048,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50aea928_75d25f0c",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "850cdf67_3a189124",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 832,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Unfortunately this creates a VLA (\"variable length array\"), as `const` variables cannot be used as an \"integer constant expression\". See:\n\nhttps://thephd.dev/constant-integers-are-actually-constant-wow-finally-someones-writing-the-goddamn-paper-%F0%9F%99%84\n\nIf you declare `required` as `constexpr` that should help.",
      "range": {
        "startLine": 832,
        "startChar": 26,
        "endLine": 832,
        "endChar": 34
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b1f86d7_1fd4965a",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 832,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "850cdf67_3a189124",
      "range": {
        "startLine": 832,
        "startChar": 26,
        "endLine": 832,
        "endChar": 34
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "360046b1_063fbf08",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 837,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Please use `pldm_msgbuf_init_errno()` throughout. I don\u0027t want to see  more calls to `pldm_msgbuf_init_cc()` added to the codebase.",
      "range": {
        "startLine": 837,
        "startChar": 14,
        "endLine": 837,
        "endChar": 33
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2b5bb8e_c30ade50",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 837,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "360046b1_063fbf08",
      "range": {
        "startLine": 837,
        "startChar": 14,
        "endLine": 837,
        "endChar": 33
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4231395c_50008a5d",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 847,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "`strncmp()`?",
      "range": {
        "startLine": 847,
        "startChar": 14,
        "endLine": 847,
        "endChar": 20
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf55ba57_ac2aefec",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 847,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4231395c_50008a5d",
      "range": {
        "startLine": 847,
        "startChar": 14,
        "endLine": 847,
        "endChar": 20
      },
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "802843d6_0ee5d03b",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 882,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "Can you please add an underflow test as well? For example, like `span_required_under` below:",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7de05f1_c5448331",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 882,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "802843d6_0ee5d03b",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5afe3fbd_9eb124da",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 884,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-04T02:02:59Z",
      "side": 1,
      "message": "The tests you\u0027ve added should be after this one.",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9958c961_fc43ff99",
        "filename": "tests/msgbuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 884,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2024-07-04T04:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5afe3fbd_9eb124da",
      "revId": "d056c13ed7f60ef5c18ae4f489d55094481ffcd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}