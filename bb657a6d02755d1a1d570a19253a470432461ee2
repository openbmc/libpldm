{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0842334c_7ee74c9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-19T02:47:49Z",
      "side": 1,
      "message": "I think you may have a misunderstanding here. The structs intentionally do not specify the `__attribute__((packed))`. It sounds like you\u0027re trying to cast them directly over the wire-formatted buffer, which is not intended to work, because many PLDM messages are not specified in a way that can be directly mapped to a C struct. This is why there is a serialisation process (the `encode_*()` / `decode_*()` APIs) at all.\n\nThe issue is called out in the changes checklist:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain\u003d1#L109-L110\n\nIf you\u0027d like to post a demonstration of how you were using the type such that you observed data corruption I\u0027d appreciate it. That way we can work towards consensus on what it is that you should be doing.",
      "revId": "bb657a6d02755d1a1d570a19253a470432461ee2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4672dc8_d5ea8370",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1002135
      },
      "writtenOn": "2024-09-19T08:41:42Z",
      "side": 1,
      "message": "Thank you for the review! Here\u0027s the reply regarding to your suggesstion:\n\u003e It sounds like you\u0027re trying to cast them directly over the wire-formatted buffer, which is not intended to work\n\nIt\u0027s true, I\u0027m using `sizeof()` to move the buffer pointer and assume the pldm response is wire-formatted, which does effected, let me spend some time to comfirm this problem from pldm side, when the result comes out, I\u0027ll get back to you ASAP.",
      "parentUuid": "0842334c_7ee74c9c",
      "revId": "bb657a6d02755d1a1d570a19253a470432461ee2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43549e95_57eef6af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-20T03:08:48Z",
      "side": 1,
      "message": "Okay, so if the issue was with `sizeof()`, I think we\u0027re missing the message size macros. Perhaps you can add them instead? Generally I\u0027ve been asking people to add a `define` immediately following struct definition.",
      "parentUuid": "b4672dc8_d5ea8370",
      "revId": "bb657a6d02755d1a1d570a19253a470432461ee2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45f8d0d4_12d70e05",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1002135
      },
      "writtenOn": "2024-09-20T09:17:46Z",
      "side": 1,
      "message": "Done, as your request, the macro was defined right behind the struct definition, but I\u0027ve notice that those other size-define macros did not done like that.\n\nMoreover, because the packed attribute is no longer needed for downstream related structs, the commit message has been re-written.",
      "parentUuid": "43549e95_57eef6af",
      "revId": "bb657a6d02755d1a1d570a19253a470432461ee2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}