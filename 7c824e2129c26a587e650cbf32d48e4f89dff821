{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bba90e76_b81ad883",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-12T14:29:52Z",
      "side": 1,
      "message": "(I don\u0027t think this discussion is worth holding up the commit for).",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1729f83e_4d7ef5ec",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-11T22:11:25Z",
      "side": 1,
      "message": "There also appears to be an include/libpldm/requester subdirectory.  Is that considered deprecated?",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7b4c41_89492830",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-11T23:04:01Z",
      "side": 1,
      "message": "Hopefully it\u0027s not deprecated? The API might not be ideal, but I don\u0027t think that\u0027s reason to deprecate it. We can evolve it to fix it.",
      "parentUuid": "1729f83e_4d7ef5ec",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80d7eed3_026def97",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-10-12T14:22:52Z",
      "side": 1,
      "message": "Yes its not deprecated. There are still consumers of that API.we will fix it.",
      "parentUuid": "9e7b4c41_89492830",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b1b33ad_8a0f42a2",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-12T14:29:52Z",
      "side": 1,
      "message": "Maybe depreciated was the wrong word here.\n\nThe APIs in that folder are the primary ones that I don\u0027t think really belong for a few reasons:\n1. It violates the documentation point here of \"nothing openbmc specific in this repo\".\n2. The APIs do not actually work outside of a very specific mctp path.\n3. It violates our overall architecture of not having protocol details leaking into every other repository.  I have no idea, for instance, why phosphor-logging has any knowledge whatsoever of PLDM as it does today.",
      "parentUuid": "80d7eed3_026def97",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32a45a09_8ccdaa13",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-10-13T06:02:41Z",
      "side": 1,
      "message": "Yes, agree with all of your points.\n1 \u0026 2. Yes it does violate it for now, but once we move to MCTP kernel sockets - this won\u0027t be openbmc specific anymore ? \u0026 also there is some work needed to make those API work seamlessly with various backends. I will work towards fixing it. @arj had some thoughts on it per my earlier discussion with him in discord.\n3. I think few of the apps used the requester interface, because pldm does not have a good dbus model, i am planning to work on this next \u0026 come up with a good dbus model to expose the data. By doing that we can stop atleast a few of the apps to change the interface to dbus rather than using the mctp mechanism to get data.\n\n@arj do you want to add anything to what i said ?",
      "parentUuid": "6b1b33ad_8a0f42a2",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b8e5a4_dff3867d",
        "filename": "README.md",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-13T10:56:48Z",
      "side": 1,
      "message": "@Manoj,\n\nI think we\u0027re on the same page.  I would propose we write some language to this effect in the doc.  (ie. warn that those APIs are going to change and probably aren\u0027t appropriate to be writing new code against).\n\n\u003e Yes it does violate it for now, but once we move to MCTP kernel sockets - this won\u0027t be openbmc specific anymore\n\nI thought the spirit of \"not openbmc specific\" was that the code could compile in non-linux environments too?  I think Hostboot/skiboot/Zephyr are all environments that people want to be able to utilize this code in as well, which won\u0027t have those kernel APIs either.  Obviously we can disable portions via configure flags though.",
      "parentUuid": "32a45a09_8ccdaa13",
      "revId": "7c824e2129c26a587e650cbf32d48e4f89dff821",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}