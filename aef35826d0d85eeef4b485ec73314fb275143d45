{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d21d990_48c33c84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-05-19T15:14:29Z",
      "side": 1,
      "message": "I created a new commit chain considering the review comments - https://gerrit.openbmc.org/c/openbmc/libpldm/+/63615",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84f2cd06_2b2dfa26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-22T01:08:29Z",
      "side": 1,
      "message": "Can you please clarify which patches we should be considering? Either tag all the relevant patches in the set or abandon the ones that are no longer relevant (ideally both).",
      "parentUuid": "1d21d990_48c33c84",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d60da82_07c55546",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-05-22T09:44:52Z",
      "side": 1,
      "message": "yes - new commit chain is -\n https://gerrit.openbmc.org/c/openbmc/libpldm/+/63615",
      "parentUuid": "84f2cd06_2b2dfa26",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47beb5b4_abf93b49",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-08T11:40:51Z",
      "side": 1,
      "message": "nit: spelling \u003d container",
      "range": {
        "startLine": 269,
        "startChar": 61,
        "endLine": 269,
        "endChar": 70
      },
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32fdd4f_9862a756",
        "filename": "include/libpldm/pdr.h",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-10T04:11:51Z",
      "side": 1,
      "message": "This breaks the existing API. Also, passing booleans directly as a function argument isn\u0027t a great API UX. Can we instead have `pldm_entity_association_tree_add()` stay with its existing prototype and assume false for `is_update_container_id`? Then add a new function, say `pldm_entity_association_tree_add_update()` for want of a better colour bike shed, which assumes true for `is_update_container_id`?",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1b1e4e8_52e9733c",
        "filename": "src/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 422,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-10T04:11:51Z",
      "side": 1,
      "message": "container is misspelled here also",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec56313e_58b57d7b",
        "filename": "src/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-10T04:11:51Z",
      "side": 1,
      "message": "Why are we doing this in the body of both branches? Why can\u0027t we just do this after line 474?",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13d44eb1_b925e527",
        "filename": "src/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-05-19T15:14:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec56313e_58b57d7b",
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b395fcfa_8935542d",
        "filename": "tests/libpldm_pdr_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 587,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-08T11:40:51Z",
      "side": 1,
      "message": "Not a single \u0027false\u0027 test case added?",
      "range": {
        "startLine": 587,
        "startChar": 55,
        "endLine": 587,
        "endChar": 61
      },
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19cc3faa_3776f4f7",
        "filename": "tests/libpldm_pdr_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 587,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-05-19T15:14:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b395fcfa_8935542d",
      "range": {
        "startLine": 587,
        "startChar": 55,
        "endLine": 587,
        "endChar": 61
      },
      "revId": "aef35826d0d85eeef4b485ec73314fb275143d45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}