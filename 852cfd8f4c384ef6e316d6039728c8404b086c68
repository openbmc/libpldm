{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64fab98f_8ac40c84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Hi Alexander, thanks for the rework.",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fea03bd6_cc0045d4",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 15
      },
      "lineNbr": 187,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Is this necessary?",
      "range": {
        "startLine": 182,
        "startChar": 1,
        "endLine": 187,
        "endChar": 44
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b882fba_fb795733",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 15
      },
      "lineNbr": 187,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "nope, the underlying type is the same for most of them, so we can inline.",
      "parentUuid": "fea03bd6_cc0045d4",
      "range": {
        "startLine": 182,
        "startChar": 1,
        "endLine": 187,
        "endChar": 44
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7fc320_5f7dd702",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 15
      },
      "lineNbr": 197,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Please don\u0027t do this.",
      "range": {
        "startLine": 194,
        "startChar": 1,
        "endLine": 197,
        "endChar": 65
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1332561d_0d612064",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 15
      },
      "lineNbr": 197,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Changed to using the ```variable_field``` struct already provided by the C API.",
      "parentUuid": "9e7fc320_5f7dd702",
      "range": {
        "startLine": 194,
        "startChar": 1,
        "endLine": 197,
        "endChar": 65
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab626788_0dab2d80",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "See comment on header.",
      "range": {
        "startLine": 15,
        "startChar": 1,
        "endLine": 23,
        "endChar": 1
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a208673_2b1e15ed",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:31:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab626788_0dab2d80",
      "range": {
        "startLine": 15,
        "startChar": 1,
        "endLine": 23,
        "endChar": 1
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "743ccc10_6f693f6c",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Let me consider this.",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47fff4e2_1b213f64",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-01T14:55:52Z",
      "side": 1,
      "message": "replaced this with a copy loop.\n\nThere is overhead, but the implementation can always be optimized at a later point, to avoid getting stuck on this clang-tidy warning.",
      "parentUuid": "743ccc10_6f693f6c",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d53539be_a60a976f",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "This doesn\u0027t implement the non-printable-characters behaviour described in the documentation (but I prefer we don\u0027t anyway).",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23b9136f_9d9c83d9",
        "filename": "bindings/cpp/utils.cpp",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:31:56Z",
      "side": 1,
      "message": "Ok, removed that part. Not checking for printable chars anymore.",
      "parentUuid": "d53539be_a60a976f",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcc8ebda_e0306d3e",
        "filename": "bindings/cpp/utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Please rather make this use `std::expected` and just error out if there\u0027s something that can\u0027t be handled.",
      "range": {
        "startLine": 15,
        "startChar": 1,
        "endLine": 18,
        "endChar": 74
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86c991fe_95db2493",
        "filename": "bindings/cpp/utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:31:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcc8ebda_e0306d3e",
      "range": {
        "startLine": 15,
        "startChar": 1,
        "endLine": 18,
        "endChar": 74
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4927068e_42d22b1b",
        "filename": "bindings/cpp/utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Whitespace is a bit funky above.",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05d75b40_9f7e6199",
        "filename": "bindings/cpp/utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:31:56Z",
      "side": 1,
      "message": "Indented it to be above the declaration.",
      "parentUuid": "4927068e_42d22b1b",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "072f7cb9_ca12cd56",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "I don\u0027t think this is a great idea. It\u0027s a has-a relationship, not an is-a. Let\u0027s do composition rather than inheritance.",
      "range": {
        "startLine": 18,
        "startChar": 26,
        "endLine": 18,
        "endChar": 46
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f409a7b0_185edd55",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "072f7cb9_ca12cd56",
      "range": {
        "startLine": 18,
        "startChar": 26,
        "endLine": 18,
        "endChar": 46
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "825daee2_843c389b",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "`std::optional\u003cint\u003e rc`?",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e51d1fb7_baf9d252",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "The int is for passing through the libpldm error codes?\n\nWhy do you want an optional int, is there cases where we do not have an error code or cannot somehow map it?",
      "parentUuid": "825daee2_843c389b",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "854dba01_36167172",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Need to consider the ABI bit drama of adding support for downstream devices.",
      "range": {
        "startLine": 25,
        "startChar": 1,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3df3302f_30ee8661",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-01T14:55:52Z",
      "side": 1,
      "message": "Taking pin as an argument now. Everything besides 1.0.0 results in an std::unexpected error.",
      "parentUuid": "854dba01_36167172",
      "range": {
        "startLine": 25,
        "startChar": 1,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "840e45a2_f65e257a",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 54,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "It should be the whole package, not just the header.",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f8e5a06_c5149422",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 54,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "840e45a2_f65e257a",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51f98f24_dd582c9d",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 61,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "This is mis-named given the above.",
      "range": {
        "startLine": 61,
        "startChar": 36,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "167ba5cd_024dffd2",
        "filename": "include/libpldm/bindings/cpp/firmware_update.hpp",
        "patchSetId": 15
      },
      "lineNbr": 61,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f98f24_dd582c9d",
      "range": {
        "startLine": 61,
        "startChar": 36,
        "endLine": 61,
        "endChar": 42
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d895a2_255c3912",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Why\u0027s this necessary?",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d166ae3_900f1ff4",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "removed it, leftovers from pldm repo.",
      "parentUuid": "61d895a2_255c3912",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b32b378a_41af053e",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Span?",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abaa9f40_0e44188e",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-01T14:55:52Z",
      "side": 1,
      "message": "Wanted a value object at least for the package header.\n\nSee the other discussion, let me know what you think of it 😊",
      "parentUuid": "b32b378a_41af053e",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab6a7bc2_3c94ef50",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "What happened to the suggestion about resolving the components after parsing the info data, rather than leaving the consumer with a set of offsets?",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86008fe_2d8f04a2",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Using ```std::vector\u003cstd::reference_wrapper\u003cComponentImageInfo\u003e\u003e``` in latest revision.",
      "parentUuid": "ab6a7bc2_3c94ef50",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a8d6bf_25fa9e00",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 37,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Should this rather be a span so we\u0027re not copying it?",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f527c422_4f0980c3",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 37,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "I wanted to have a value object at least for the package header.\n\nMakes things easier to test and perhaps easier to go the other way\nfor PackageBuilder API.\n\nLet me know if we must have everything be a reference, or have it be as small as possible in memory.\n\nFrom my perception the package header is tiny compared to the component images so i did not worry too much about minimizing the header struct.",
      "parentUuid": "97a8d6bf_25fa9e00",
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1846fe4_f3c19346",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-25T01:40:55Z",
      "side": 1,
      "message": "Why are we doing this when it\u0027s already resolved to a valid pointer/length pair by the C API?",
      "range": {
        "startLine": 49,
        "startChar": 1,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4db2fee9_a6be1f4f",
        "filename": "include/libpldm/bindings/cpp/types.hpp",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T15:14:39Z",
      "side": 1,
      "message": "Changed to using the ```variable_field``` struct already provided by the C API.",
      "parentUuid": "c1846fe4_f3c19346",
      "range": {
        "startLine": 49,
        "startChar": 1,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "852cfd8f4c384ef6e316d6039728c8404b086c68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}