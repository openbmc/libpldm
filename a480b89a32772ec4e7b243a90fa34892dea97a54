{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "329f2680_e10795fc",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 6
      },
      "lineNbr": 2095,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-05T04:27:05Z",
      "side": 1,
      "message": "This change only passes CI because the struct isn\u0027t captured in the ABI dump as the related functions are still marked as `LIBPLDM_ABI_TESTING`. It\u0027s not a sustainable change to make.\n\nI\u0027m working on making the API/ABI for the package iterators support multiple package formats in a sustainable way.",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b534ee5_ae75923c",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 6
      },
      "lineNbr": 2095,
      "author": {
        "id": 1002135
      },
      "writtenOn": "2025-06-11T08:50:58Z",
      "side": 1,
      "message": "Not quite sure the meaning, as this is a mandatory field for v1.3.0, I didn\u0027t find an reachable approach for supporting that without adding this field, otherwise we\u0027re bypassing this in the implementation.\n\nJFYI: I have an outdated patch for testing purpose, which transfer all of these to `LIBPLDM_ABI_STABLE` and passed CI: [#80559]\n\n[#80559]: https://gerrit.openbmc.org/c/openbmc/libpldm/+/80559",
      "parentUuid": "329f2680_e10795fc",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bf8055e_b7c54505",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 6
      },
      "lineNbr": 2095,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T04:21:58Z",
      "side": 1,
      "message": "So to make sure we have things crisp here, while DSP0267 v1.3.0 specifies e.g. header format revision 4, it also (implicitly) specifies header format revisions 3, 2 and 1. From my perspective it\u0027s valid to use DSP0267 v1.3.0 to implement support for e.g. revision 2, and still not yet support revision 4.\n\nTo implement format revision 4, yes, we need to add e.g. the reference manifest data field. Now that my iterator patch introduces the pin concept, we can do that with confidence that we won\u0027t cause invalid memory accesses on behalf of the application when upgrading or downgrading the library.",
      "parentUuid": "5b534ee5_ae75923c",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dff2dfbe_51deaa83",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 6
      },
      "lineNbr": 684,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-06-05T01:54:37Z",
      "side": 1,
      "message": "Does the code initialize the struct var to \u0027\\0\u0027 somewhere because i am wondering if you need to set \nrec-\u003ereference_manifest_data.ptr \u003d NULL \n\nin case !rec-\u003ereference_manifest_data.length as on line# 715.",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d397b2_4e8de831",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 6
      },
      "lineNbr": 684,
      "author": {
        "id": 1002135
      },
      "writtenOn": "2025-06-11T08:50:58Z",
      "side": 1,
      "message": "Received, will apply this to the next patchset.",
      "parentUuid": "dff2dfbe_51deaa83",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "772329a2_7a7d9d9e",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 6
      },
      "lineNbr": 3206,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-06-05T01:54:37Z",
      "side": 1,
      "message": "Does the code initialize the struct var to \u0027\\0\u0027 somewhere because i am wondering if you need to set\nrec-\u003ereference_manifest_data.ptr \u003d NULL\n\nin case !rec-\u003ereference_manifest_data.length as on line# 715.",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9388294_909beafc",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 6
      },
      "lineNbr": 3206,
      "author": {
        "id": 1002135
      },
      "writtenOn": "2025-06-11T08:50:58Z",
      "side": 1,
      "message": "Received, will apply this to the next patchset.",
      "parentUuid": "772329a2_7a7d9d9e",
      "revId": "a480b89a32772ec4e7b243a90fa34892dea97a54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}