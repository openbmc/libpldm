{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "761927dc_53c5074f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T05:38:22Z",
      "side": 1,
      "message": "Given the functions affected are static, can we instead return the record handle value as the result in the success case so we don\u0027t have an in-out pointer? Then the caller can increment the result as required.",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e80f0cf4_ef90dd84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2024-09-11T09:33:22Z",
      "side": 1,
      "message": "Currently we are returning error code from those static functions. So can we safely consider that if the return value is \"\u003e\u003d0\" then its success case and record handle is returned and \"\u003c0\" return value is considered as failure?",
      "parentUuid": "761927dc_53c5074f",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "250206eb_9d8ff4f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T23:56:15Z",
      "side": 1,
      "message": "Yeah, that was my thought. What do you think? What\u0027s the maximum value for a record handle?",
      "parentUuid": "e80f0cf4_ef90dd84",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08c1e988_2432f964",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2024-09-12T07:50:24Z",
      "side": 1,
      "message": "Record handle is a uint32 value.",
      "parentUuid": "250206eb_9d8ff4f0",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a30152_bb98b461",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-13T05:02:46Z",
      "side": 1,
      "message": "Right, given its all internal, perhaps we change the static functions to return `int64_t` and avoid the need for a pointer for an in-out parameter.",
      "parentUuid": "08c1e988_2432f964",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b85b645_508bf214",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2024-09-17T07:17:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55a30152_bb98b461",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91b255a1_6ece4be9",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 803,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T05:39:07Z",
      "side": 1,
      "message": "Ah, so for the record, this is the read that I missed previously.",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d834afc6_701a992d",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 803,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-13T05:02:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91b255a1_6ece4be9",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6011a3e_b254003d",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 975,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-13T05:02:46Z",
      "side": 1,
      "message": "Can you please send a separate patch to return the result of `entity_association_pdr_add()`? We should not be unconditionally returning 0 here.",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84f95a60_edacab2b",
        "filename": "src/dsp/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 975,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2024-09-17T07:17:39Z",
      "side": 1,
      "message": "This change was needed as part of this commit. Updated the change.",
      "parentUuid": "e6011a3e_b254003d",
      "revId": "d5d1b5be6ea5d8641119fb506daf2dff60c89d96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}