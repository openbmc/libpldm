{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97983e61_f952d116",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "Partially reviewed, posting few comments, will complete review.",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b63d2fa_7651bf7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "Thanks for the comments Tom",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb8145e7_e708972a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Overall, LGTM. A few items require clarification.",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f906153f_25a454ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "I\u0027ve pushed an update that allows setting the timeouts.\nI also cleaned up a few TODOs (some were outdated, the cancel_update on timeout is now added).",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c11b174c_e7bf30a2",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 76,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "nit: to the application or from the application?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c9a37c7_a2711098",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 76,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "by \"application\" I mean the program using the FD responder library - it populates the component table. So I think \"from\" is right?",
      "parentUuid": "c11b174c_e7bf30a2",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de10af67_11145aa8",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 76,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8c9a37c7_a2711098",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd67c7de_eae2406b",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 91,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "imageset is ActiveComponentImageSetVersionString/PendingComponentImageSetVersionString?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "875a6353_3d167509",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 91,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "Yes. I\u0027ll fix the descriptions there, thanks.",
      "parentUuid": "fd67c7de_eae2406b",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "502b6039_7a3c3472",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 95,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "ret_pending",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d1b20c8_235daa04",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 95,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "502b6039_7a3c3472",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a1df7eb_684d5551",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 221,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "CancelUpdate will move the State machine to Idle state and CancelUpdateComponent will move the state machine to Ready state, how will it be distinguished with a common function?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "462a93d8_2eebfd6b",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 221,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "Internally the state machine moves to the appropriate state, but the same application callback is called for either, to cancel the currently running component. I don\u0027t think the application callback needs to distinguish the difference?\n\nCancelUpdate\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/libpldm/+/refs/changes/30/75830/23/src/firmware_device/fd.c#712\n\nCancelUpdateComponent\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/libpldm/+/refs/changes/30/75830/23/src/firmware_device/fd.c#674",
      "parentUuid": "7a1df7eb_684d5551",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c49d6226_0a68e245",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 221,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "462a93d8_2eebfd6b",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16e9ef6d_159372ed",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 224,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-09T19:31:59Z",
      "side": 1,
      "message": "Will we add for GetStatus command?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "674a7319_7e3ea7b1",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 224,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-10T01:45:59Z",
      "side": 1,
      "message": "GetStatus is handled internally by the FD responder, if that\u0027s what you mean? Fields such as ProgressPercent will be filled from eg the `apply` callback\u0027s `ret_progress_percent`",
      "parentUuid": "16e9ef6d_159372ed",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3e69779_c34273a2",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 224,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Per my understanding pldm_fd_ops exposes callbacks for all commands, so when PLDM UA asks for GetStatus, the PLDM FD application will invoke which function in the library?",
      "parentUuid": "674a7319_7e3ea7b1",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f27b5869_ba29860c",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 224,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "`pldm_fd_ops` isn\u0027t exposing all commands directly, it\u0027s a bit of a higher level API. GetStatus is handled internally by the library, since it knows the current state based on previous commands and callbacks.",
      "parentUuid": "e3e69779_c34273a2",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb41b296_3ab6d7ac",
        "filename": "include/libpldm/firmware_fd.h",
        "patchSetId": 23
      },
      "lineNbr": 224,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-14T16:31:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f27b5869_ba29860c",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ad5e43_a340ca93",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Instead of hardcoding, the application should be able to configure within the supported range of 1sec-5sec and similarly for other FD parameters.",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7013f146_646127c5",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "I\u0027ve added functions to set FD_T1 and FD_T2.",
      "parentUuid": "b9ad5e43_a340ca93",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1788924e_e04ac872",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-14T16:31:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7013f146_646127c5",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e3dfbc4_8fec595f",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 28,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "How would this library need to be configured if OEM completion codes for VerifyComplete needs to be supported?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c992737_2a4776e2",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 28,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "The `pldm_fd_ops.verify()` callback returns uint8_t, so errors in the vendor 0x90-0xaf range can be returned.",
      "parentUuid": "4e3dfbc4_8fec595f",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81557174_f4e0e1bd",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 142,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "aux_state is enumeration?",
      "range": {
        "startLine": 142,
        "startChar": 60,
        "endLine": 142,
        "endChar": 67
      },
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f5f71d6_a308ef80",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 142,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "It\u0027s a helper to fill a `struct pldm_get_status_resp` which uses uint8_t, since that\u0027s one of the old packed structs. Using a pointer to enum would mean the caller needs a temporary enum to copy through.",
      "parentUuid": "81557174_f4e0e1bd",
      "range": {
        "startLine": 142,
        "startChar": 60,
        "endLine": 142,
        "endChar": 67
      },
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c111726f_7f43c693",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 142,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-14T16:31:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0f5f71d6_a308ef80",
      "range": {
        "startLine": 142,
        "startChar": 60,
        "endLine": 142,
        "endChar": 67
      },
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ade0f6_9f9904e7",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 450,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "Do we compare the ComponentStamp passed with the current ComponentStamp and send identical/downgrade completion codes here and use Force Update?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d93254_c95ce8da",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 450,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "An application\u0027s `update_component()` handler could compare ComponentStamp itself based on the `update` struct, and also look for Force Update set in `update_option_flags`.\nThen it can return `PLDM_CRC_COMP_COMPARISON_STAMP_IDENTICAL` etc.",
      "parentUuid": "85ade0f6_9f9904e7",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eef43d9_853b5663",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 450,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-14T16:31:06Z",
      "side": 1,
      "message": "I think it will be elegant that this is handled in the libpldm-fd library, since current ActiveStamp and PLDM request data is available with the libarary.",
      "parentUuid": "98d93254_c95ce8da",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8681933_2870546d",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 450,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-15T05:01:53Z",
      "side": 1,
      "message": "I think for flexibility it\u0027s better to let the application perform the version comparison. The version can also be compared with Component Version String, and the library won\u0027t know how to interpret it in that case.\n\nThe ActiveStamp is should be available in any caller (since it provided it with the `components()` callback). The request data is passed through in the `comp` argument as a `struct pldm_firmware_update_component`. (In the previous comment I mistakenly said the `update` struct for the request data).",
      "parentUuid": "1eef43d9_853b5663",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df3c79d6_6a849658",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 450,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-15T17:44:41Z",
      "side": 1,
      "message": "Yeah, the spec leaves with that flexibility to comparison using either stamp or string, so application doing that check is appropriate.",
      "parentUuid": "e8681933_2870546d",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a236c66_d25a58f3",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 1371,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-13T19:52:37Z",
      "side": 1,
      "message": "For the PLDM requester commands implemented by FD, the command retries are part of the library or to be handled by application?",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20028201_1c0968ee",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 1371,
      "author": {
        "id": 1001129
      },
      "writtenOn": "2025-01-14T04:01:40Z",
      "side": 1,
      "message": "The library handles retries - the application needs to periodically call `pldm_fd_progress()` which will provide any retry message that needs to be sent (as `out_msg`/`out_len`).",
      "parentUuid": "9a236c66_d25a58f3",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d6205c4_d4cfa4c5",
        "filename": "src/firmware_device/fd.c",
        "patchSetId": 23
      },
      "lineNbr": 1371,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-15T17:44:41Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "20028201_1c0968ee",
      "revId": "d09a129c6bb0e8631c3f4671d35a51d26b8a1a43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}