{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "690de901_e32be4bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "Hi Andrewï¼š\nI have some changes that I need to confirm with you.",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a868edf_83b0ed78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "690de901_e32be4bf",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7284e4d8_60906a43",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "We should adda `size_t version` field above here when you introduced this in the previous patch. See the comment below about extensible commands.",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc5262e_5853452e",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 57,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "I will add a field for size_t version.",
      "parentUuid": "7284e4d8_60906a43",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01637f4f_ae14b1d6",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 57,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "1bc5262e_5853452e",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0434ff06_ed1bd477",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 78,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "I think we need to do a bit more here:\n\n```\nstruct pldm_oem_meta_file_io_read_attr_info {\n    uint16_t size;\n    uint32_t crc32;\n};\n\nstruct pldm_oem_meta_file_io_read_resp {\n    size_t version;\n    uint8_t completion_code;\n    uint8_t handle;\n    uint8_t option;\n    uint8_t length;\n    union {\n        struct pldm_oem_file_io_read_attr_info attr;\n    };\n#ifndef __cplusplus\n    uint8_t data[] LIBPLDM_CC_COUNTED_BY(length);\n#endif\n};\n```\n\nHow this is used by the caller is to do:\n\n```\nstruct pldm_oem_meta_file_io_read_resp resp;\n\nresp.version \u003d sizeof(struct pldm_oem_meta_file_io_read_resp);\n...\n```\n\nThis is a trick borrowed from the kernel:\n\n[Conventions for extensible system calls](https://lwn.net/Articles/830666/)\n\nIt allows you to add further read options later while still providing backwards-compatibility.\n\nI\u0027ll leave some further comments in the implementation.",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3227b12a_7265ba1a",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 78,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "Thank you for your suggestion. I understand the benefits of adding a new version field.\nHowever, the data returned in struct pldm_oem_meta_file_io_read_resp may be attributes or file data. \nWould it be better to change it to the following example ?\n\n```c\nstruct pldm_oem_meta_file_io_read_resp { \n     size_t version;\n     uint8_t completion_code;\n     uint8_t handle;\n     uint8_t option;\n     uint8_t length;\n     union {\n         struct pldm_oem_file_io_read_attr_info attr;\n         struct pldm_oem_meta_file_io_read_data_info info;\n     };\n#ifndef __cplusplus\n     uint8_t data[] LIBPLDM_CC_COUNTED_BY(length);\n#endif\n};\n```",
      "parentUuid": "0434ff06_ed1bd477",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68df5df9_d8befc9e",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 78,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T23:48:28Z",
      "side": 1,
      "message": "Sorry, yep, that looks good!",
      "parentUuid": "3227b12a_7265ba1a",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0702c1b_f269e516",
        "filename": "include/libpldm/oem/meta/file_io.h",
        "patchSetId": 31
      },
      "lineNbr": 78,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "68df5df9_d8befc9e",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b77d6943_dc555695",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 150,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "You _must_ also include a parameter for the length of the object pointed to by `resp` since it contains a flexible array member.\n\nWith that you also need to add the following check:\n\n```\nif (resp_len \u003c sizeof(*resp)) {\n    return -EINVAL;\n}\n```",
      "range": {
        "startLine": 150,
        "startChar": 22,
        "endLine": 150,
        "endChar": 67
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f709e4e_2299be4e",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 150,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "I will add this check.",
      "parentUuid": "b77d6943_dc555695",
      "range": {
        "startLine": 150,
        "startChar": 22,
        "endLine": 150,
        "endChar": 67
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f680c55d_24b1a61b",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 150,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "9f709e4e_2299be4e",
      "range": {
        "startLine": 150,
        "startChar": 22,
        "endLine": 150,
        "endChar": 67
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c59931_37d7d5f8",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "So regarding the extensible struct idea I suggested in the header, here we add:\n\n```\nif (resp-\u003eversion \u003e sizeof(*resp)) {\n    return -E2BIG;\n}\n```",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a013421_de845970",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "I will add this check.",
      "parentUuid": "43c59931_37d7d5f8",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cba7543_70c091a0",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "9a013421_de845970",
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "502ecf9f_2fba3ef0",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 164,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "Can we please keep the variable declarations and definitions at the top of the function, before any code?",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 164,
        "endChar": 40
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d7dd26_4dfd7a41",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 164,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "I will move these definitions to the top of the function.",
      "parentUuid": "502ecf9f_2fba3ef0",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 164,
        "endChar": 40
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a31227f_e2a7b52b",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 164,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "14d7dd26_4dfd7a41",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 164,
        "endChar": 40
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea9fc4a_b2ae82cc",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 188,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "Don\u0027t need to check the return value here as we\u0027re not extracting the length, it\u0027s provided by the caller.",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 188,
        "endChar": 1
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e82f457_09796c1a",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 188,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "I will remove this check.",
      "parentUuid": "0ea9fc4a_b2ae82cc",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 188,
        "endChar": 1
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a86a3c39_54530a1d",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 188,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "Done. Please check, thank you.",
      "parentUuid": "3e82f457_09796c1a",
      "range": {
        "startLine": 185,
        "startChar": 1,
        "endLine": 188,
        "endChar": 1
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ae9b90_762ca647",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 190,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T02:10:29Z",
      "side": 1,
      "message": "We should only do this if we\u0027re returning data. If the response is for an attribute read we should explicitly insert the fields.",
      "range": {
        "startLine": 189,
        "startChar": 1,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fb5fad9_165d8f2e",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 190,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-11T11:04:27Z",
      "side": 1,
      "message": "As suggested I should make the following changesï¼š\n1. Use option to confirm whether you want to insert the read result into attr (Option \u003d PLDM_OEM_META_FILE_IO_READ_ATTR) or info (Option \u003d PLDM_OEM_META_FILE_IO_READ_DATA).\n2. If the option is PLDM_OEM_META_FILE_IO_READ_DATA, the file data is inserted into data according to length.",
      "parentUuid": "f4ae9b90_762ca647",
      "range": {
        "startLine": 189,
        "startChar": 1,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3244240_73a23876",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 190,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-09-11T23:48:28Z",
      "side": 1,
      "message": "Sounds good. I think we also want to include the metadata for `*_READ_DATA` as well, right?",
      "parentUuid": "1fb5fad9_165d8f2e",
      "range": {
        "startLine": 189,
        "startChar": 1,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9bcc875_d4bcc09b",
        "filename": "src/oem/meta/file_io.c",
        "patchSetId": 31
      },
      "lineNbr": 190,
      "author": {
        "id": 1002130
      },
      "writtenOn": "2024-09-12T09:10:21Z",
      "side": 1,
      "message": "We will not need to add another \"metadata\" parameter, and will put the read data into the data of struct pldm_oem_meta_file_io_read_resp.",
      "parentUuid": "d3244240_73a23876",
      "range": {
        "startLine": 189,
        "startChar": 1,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "eaf7e6f591854d4685c325fc3e608bdc089c792c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}