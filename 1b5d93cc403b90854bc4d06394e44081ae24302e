{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a8d2e0dc_59837e08",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 14
      },
      "lineNbr": 70,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-19T00:55:53Z",
      "side": 1,
      "message": "See the discussion here: https://gerrit.openbmc.org/c/openbmc/libpldm/+/77095/comment/67729c75_a4096317/",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 70,
        "endChar": 1
      },
      "revId": "1b5d93cc403b90854bc4d06394e44081ae24302e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "608d34bf_b6135c54",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-19T00:55:53Z",
      "side": 1,
      "message": "I don\u0027t like that we\u0027re passing out a string as an error type. I\u0027d prefer we have a dedicated class extending exception that we can in-turn extend as required.",
      "range": {
        "startLine": 73,
        "startChar": 40,
        "endLine": 73,
        "endChar": 51
      },
      "revId": "1b5d93cc403b90854bc4d06394e44081ae24302e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6825587e_8c7b5064",
        "filename": "bindings/cpp/firmware_update.cpp",
        "patchSetId": 14
      },
      "lineNbr": 162,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-19T00:55:53Z",
      "side": 1,
      "message": "Please delete this. You\u0027re pinning the package parsing to format revision 1, which makes this code unnecessary.\n\nWhen you decide to pin to format revision 2 or above you should add proper support for handling downstream device descriptors.\n\nHowever, you do need to make considerations for the API/ABI of the binding and how you manage future changes to the spec along these lines. Consider taking the pin from the caller.",
      "range": {
        "startLine": 151,
        "startChar": 1,
        "endLine": 162,
        "endChar": 2
      },
      "revId": "1b5d93cc403b90854bc4d06394e44081ae24302e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}