{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8faaedf1_a825680c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-07-19T23:35:15Z",
      "side": 1,
      "message": "Look good to me.",
      "revId": "a03453c08e347b59afc69333b22dad83a720e276",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907eeddc_30edf123",
        "filename": "include/libpldm/transport.h",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2023-07-20T02:26:39Z",
      "side": 1,
      "message": "Nit: We also return PLDM_REQUESTER_INVALID_SETUP - but it is mentioned in the @pre so maybe not required to be here as well? Do we want to specifically mention the case if the transport doesn\u0027t support polling we also return 1?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 15
      },
      "revId": "a03453c08e347b59afc69333b22dad83a720e276",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "961ab223_302c561c",
        "filename": "include/libpldm/transport.h",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-07-21T04:10:30Z",
      "side": 1,
      "message": "\u003e Nit: We also return PLDM_REQUESTER_INVALID_SETUP - but it is mentioned in the @pre so maybe not required to be here as well?\n\nAh, I should also mention that here.\n\n\u003e Do we want to specifically mention the case if the transport doesn\u0027t support polling we also return 1?\n\nYeah, that\u0027s worth a mention.",
      "parentUuid": "907eeddc_30edf123",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 15
      },
      "revId": "a03453c08e347b59afc69333b22dad83a720e276",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "710f0864_b93df432",
        "filename": "src/transport/transport.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2023-07-20T02:26:39Z",
      "side": 1,
      "message": "This looks like we won\u0027t propagate the timeout (ret \u003d 0) to the calling function. Is that what we want?",
      "range": {
        "startLine": 191,
        "startChar": 3,
        "endLine": 191,
        "endChar": 9
      },
      "revId": "a03453c08e347b59afc69333b22dad83a720e276",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74a4190a_242ac696",
        "filename": "src/transport/transport.c",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-07-21T04:10:30Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s useful information. The outcome is the same, we failed to receive a message. If a caller is concerned about timeouts then they should probably use the async functions directly and manage that themselves. `pldm_transport_send_recv()` is a bit of a hack of an API already as it doesn\u0027t account for retries. It\u0027s just a convenience for users who don\u0027t quite care for those details.",
      "parentUuid": "710f0864_b93df432",
      "range": {
        "startLine": 191,
        "startChar": 3,
        "endLine": 191,
        "endChar": 9
      },
      "revId": "a03453c08e347b59afc69333b22dad83a720e276",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}