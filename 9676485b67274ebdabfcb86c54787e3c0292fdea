{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa8c4c63_8aba2a03",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-04-21T02:45:29Z",
      "side": 1,
      "message": "We can add unit tests for the instance ID feature?",
      "revId": "9676485b67274ebdabfcb86c54787e3c0292fdea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9222ff6c_ab5a6432",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-04-21T03:51:04Z",
      "side": 1,
      "message": "Yeah, I had the same thought.\n\nI\u0027m planning to do that in a follow-up change while Rashmica pushes ahead with the AF_MCTP conversion; adding tests is easy, dealing with the many moving parts to get AF_MCTP integrated is not. So I hope she can continue to focus on the integration effort given she has all the routine and experience with testing it.",
      "parentUuid": "aa8c4c63_8aba2a03",
      "revId": "9676485b67274ebdabfcb86c54787e3c0292fdea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa0e7b6_264ede92",
        "filename": "src/requester/instance-id.c",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-04-21T02:45:29Z",
      "side": 1,
      "message": "Instead of a hardcoded path, I feel this should be configurable.\n\nAlso, if each alloc/free is a write to the file, wouldn\u0027t be it preferred to have the instance ID file on tmpfs. Over a BMC reboot, it is not expected to persist the instance ID assignments.",
      "revId": "9676485b67274ebdabfcb86c54787e3c0292fdea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a63733aa_2aa11e10",
        "filename": "src/requester/instance-id.c",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-04-21T03:23:27Z",
      "side": 1,
      "message": "\u003e https://amboar.github.io/notes/2023/03/29/a-global-pldm-instance-id-allocator-for-libpldm.html\n\nRead this :-), no write operations required.\n\nA configurable lock database allows testing.",
      "parentUuid": "9fa0e7b6_264ede92",
      "revId": "9676485b67274ebdabfcb86c54787e3c0292fdea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93f75bb8_2a91e576",
        "filename": "src/requester/instance-id.c",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-04-21T03:38:52Z",
      "side": 1,
      "message": "Never mind, pldm_instance_db_init can be used for testing.",
      "parentUuid": "a63733aa_2aa11e10",
      "revId": "9676485b67274ebdabfcb86c54787e3c0292fdea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}