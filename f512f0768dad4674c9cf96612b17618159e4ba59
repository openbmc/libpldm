{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0384133b_e63f95e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "Can you please reference the spec ID and name, its version, and the relevant section used to define the message type in the commit message?",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51b52be9_f98d797a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0384133b_e63f95e6",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5f9dfa_bd6c1a31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "Hi Tal, thanks for the patch. Before we go too much further I do have to ask that you be party to an OpenBMC CLA. If you work for a company that already has a CLA registered, then talk to the CLA manager to get yourself added to your company\u0027s CI group. You may also organise an individual CLA if you wish.\n\nMore information is available here:\n\nhttps://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#starting-out\n\nBeyond that, can you please add an entry to `CHANGELOG.md`?",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfa4ed3b_d049847c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Thanks, I somehow missed the CLA section, I\u0027ve just send a signed individual copy.\n\nAlso, I added the commit to the changelog.",
      "parentUuid": "aa5f9dfa_bd6c1a31",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2621c0_0f870f4c",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-02T06:48:27Z",
      "side": 1,
      "message": "shouldn\u0027t the MIN_RESP_BYTES be 5? \nAccording to spec- https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.2.0.pdf?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d69779f_34318b7a",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "This was something I wasn\u0027t sure of. It seems like in other commands with similar optional data (like `PLDM_GET_STATE_SENSOR_READINGS_MIN_RESP_BYTES`) the min size is without the optional data so I went with that approach.",
      "parentUuid": "0e2621c0_0f870f4c",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae0c2ed1_f069fe08",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "Yes, I prefer we use 2 for the minimum size, despite the spec suggesting that a compositeEffectorCount value of 0 is not valid. Using 2 aligns with the use of a flexible array, though maybe we want to consider some way of making the maths for allocation a bit more ergonomic. We can do that later though.",
      "parentUuid": "3d69779f_34318b7a",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29e3e6b7_164e769e",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 859,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-02T06:48:27Z",
      "side": 1,
      "message": "state_field_for_get_state_effecter ?",
      "range": {
        "startLine": 859,
        "startChar": 15,
        "endLine": 859,
        "endChar": 49
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eff2139_c6e0ae8f",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 859,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29e3e6b7_164e769e",
      "range": {
        "startLine": 859,
        "startChar": 15,
        "endLine": 859,
        "endChar": 49
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09aea61c_b201489d",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 863,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "I realise the other structs are marked `__attribute__((packed))`, but going forward this is not desired. Please remove the attribute.",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4cc35b0_9b3869d9",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 863,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Not sure if strictly needed but I added a `#define` of the size just to make sure it\u0027s still consistent instead of using `sizeof`.",
      "parentUuid": "09aea61c_b201489d",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d25510d_3496a2ec",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 863,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "Perfect, thanks.",
      "parentUuid": "d4cc35b0_9b3869d9",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69729bf_fa592f6f",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1003,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "I understand that other structs try to implement flexible arrays this way, but ultimately it leads to undefined behaviour in both C and C++.\n\nRather than add more instances, can you please instead use:\n\n```c\nstruct pldm_get_state_effecter_states_resp {\n    uint8_t completion_code;\n    uint8_t comp_effecter_count;\n#ifndef __cplusplus\n    get_effecter_state_field field[]\n#endif\n};\n\nget_effecter_state_field *pldm_get_effecter_states_resp_field(struct pldm_get_effecter_states_resp *resp);\n```\n\nand then in `src/platform.c`:\n\n```c\nget_effecter_state_field *pldm_get_effecter_states_resp_field(struct pldm_get_effecter_states_resp *resp)\n{\n    return resp-\u003efield;\n}\n```\n\nThis way `sizeof(struct pldm_get_state_effecter_states_resp)` yields the expected value (2 in this case), we avoid defining the flexible array for C++ (where they are not specified), and we correctly define the flexible array for C (where the concept is specified, see N1570 (C11 draft specification) 6.7.2.1 paragraph 18). The helper function enables access to the flexible array member from C++ (by way of being implemented in C).",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86c907ef_9d6cbb0b",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1003,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a69729bf_fa592f6f",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e74452f_5c4a8ed6",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1004,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "Also drop the packed attribute here.",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7678df83_0a6e3ae8",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1004,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e74452f_5c4a8ed6",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d095ead_caefed84",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1640,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "As above, please drop the packed attribute.",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33438c20_d8bc65b9",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1640,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d095ead_caefed84",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26d9eb1d_0b799074",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1647,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-02T06:48:27Z",
      "side": 1,
      "message": "is it not \"out\" parameter alone?",
      "range": {
        "startLine": 1647,
        "startChar": 3,
        "endLine": 1647,
        "endChar": 43
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecee228e_d6e52a89",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1647,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "This was based on `decode_get_state_sensor_readings_resp` which has the same parameter. I\u0027m not too sure why it\u0027s declared as \"in\".",
      "parentUuid": "26d9eb1d_0b799074",
      "range": {
        "startLine": 1647,
        "startChar": 3,
        "endLine": 1647,
        "endChar": 43
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1616ee1_ad666243",
        "filename": "include/libpldm/platform.h",
        "patchSetId": 2
      },
      "lineNbr": 1647,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "Let\u0027s not get hung up on the unknown and just declare it as out.",
      "parentUuid": "ecee228e_d6e52a89",
      "range": {
        "startLine": 1647,
        "startChar": 3,
        "endLine": 1647,
        "endChar": 43
      },
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc9db0b2_159c414b",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2433,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "New APIs must be marked `LIBPLDM_API_TESTING` in the patch introducing them. This allows us to ship the API but not yet promise that we won\u0027t break it in the future if it\u0027s deemed to need fixing.\n\nConverting it to `LIBPLDM_API_STABLE` must be done in a follow-up patch, that also links to at least on use of the API in another project (usually openbmc/pldm).",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cda0829_728852d5",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2433,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "I assume `LIBPLDM_API_STABLE` is a typo and you meant `LIBPLDM_ABI_STABLE`, if so, done.\n\nI do a have a patch ready for openbmc/pldm pldmtool that can be uploaded as well.",
      "parentUuid": "cc9db0b2_159c414b",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f03c470_b973e287",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2433,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "\u003e I assume LIBPLDM_API_STABLE is a typo and you meant LIBPLDM_ABI_STABLE, if so, done.\n\nSorry, yes, typo.",
      "parentUuid": "6cda0829_728852d5",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad065aa_df028faa",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2455,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "Please use the `msgbuf` APIs instead, as you\u0027ve done below. That way there\u0027s no question about safety with respect to memory and endianness concerns.",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5af69a9_2dc49bf7",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2455,
      "author": {
        "id": 1002058
      },
      "writtenOn": "2024-05-02T12:49:38Z",
      "side": 1,
      "message": "I didn\u0027t see an exact example of using `msgbuf` in an encode request function so let me know if I\u0027ve fixed it correctly.",
      "parentUuid": "5ad065aa_df028faa",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e7980da_ae86237e",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2455,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "b5af69a9_2dc49bf7",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e6dd035_1f40dc6b",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2460,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-02T01:55:18Z",
      "side": 1,
      "message": "Needs to be `LIBPLDM_API_TESTING` as noted above.",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4822b31_ca62b79c",
        "filename": "src/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 2460,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-03T01:26:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e6dd035_1f40dc6b",
      "revId": "f512f0768dad4674c9cf96612b17618159e4ba59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}