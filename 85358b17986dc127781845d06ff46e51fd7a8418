{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02203201_823fb210",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Hello, I have some comments inline, but I\u0027m more confident in the implementation this time. Thanks for reworking it.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8118baf_f0acdd90",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Can we please specify this as `char active_comp_release_date[9]` so it can be used as a `NUL`-terminated string? The encode function can drop the final `NUL` when constructing the wire-format message, and the decoder can ensure the final byte is `NUL` when populating the struct member.\n\nAlso consider defining a macro for the magic number.",
      "range": {
        "startLine": 600,
        "startChar": 1,
        "endLine": 600,
        "endChar": 37
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c95dc82_143730b4",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8118baf_f0acdd90",
      "range": {
        "startLine": 600,
        "startChar": 1,
        "endLine": 600,
        "endChar": 37
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f4bfcad_b82d1308",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 604,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "As above: `char pending_comp_release_date[9];` (taking into account the decision on a macro definition for the magic number).",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d191aa1_f7fb151c",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 604,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f4bfcad_b82d1308",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03d901dd_b5a590c7",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 979,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Can you please separate the description with a `-`? It makes it easier to find where the description starts.\n\nPlease audit the rest of the doxygen documentation you\u0027ve added for this.",
      "range": {
        "startLine": 979,
        "startChar": 25,
        "endLine": 979,
        "endChar": 26
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a8c9e8a_c4e8ea1f",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 979,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03d901dd_b5a590c7",
      "range": {
        "startLine": 979,
        "startChar": 25,
        "endLine": 979,
        "endChar": 26
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95f7fb12_89e41cd9",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 985,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Okay, so in between your last patchset and this one, I added a checklist for making changes to libpldm. I\u0027m hoping the checklist helps us achieve consistency in API design (among other things).\n\nPart of the checklist requests that new functions return negative `errno` values:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain\u003d1#L108-L112\n\nCan you please update the documentation and the implementation to conform with that?\n\nPlease also audit the rest of the functions you\u0027ve added so they adhere with this.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea76f4e4_a1fe5534",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 985,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Sure, thanks for reminding, I\u0027ve changed the `@return` into `errno` and list all possible return values, and check each items on the checklist myself, please review.",
      "parentUuid": "95f7fb12_89e41cd9",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f2eb16a_e961dc22",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 985,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-26T02:47:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea76f4e4_a1fe5534",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fa13d08_6391dae4",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 1016,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "There\u0027s some unnecessary whitespace here. Can you please trim that off and audit the rest of the change for any further instances?",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "759c068c_38297403",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 1016,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fa13d08_6391dae4",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7848c18a_015aff03",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "We can pass in the `struct variable_field *` that we extracted the region into via `decode_get_downstream_firmware_params_resp()` here, right? That would feel more ergonomic to me.",
      "range": {
        "startLine": 1029,
        "startChar": 1,
        "endLine": 1029,
        "endChar": 36
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31ece727_12f70d23",
        "filename": "include/libpldm/firmware_update.h",
        "patchSetId": 9
      },
      "lineNbr": 1029,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "True, thanks for the suggestion, done.",
      "parentUuid": "7848c18a_015aff03",
      "range": {
        "startLine": 1029,
        "startChar": 1,
        "endLine": 1029,
        "endChar": 36
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191893c3_f5859dfb",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1049,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "See comment in the header about return values. This should be `-EINVAL`.\n\nPlease audit the rest of the patch for this.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9a97ffd_a451de84",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1049,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done.\n\nI modifed the code based on the commit you contributed before: https://github.com/openbmc/libpldm/commit/f490a38f7c78dee6d71db0706d8ddbb5d37c95c1, please let me know if I miss anythiing else.",
      "parentUuid": "191893c3_f5859dfb",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87fa5511_75f29efd",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1052,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "... and switch to `pldm_msgbuf_init_errno(...)`.",
      "range": {
        "startLine": 1052,
        "startChar": 6,
        "endLine": 1052,
        "endChar": 25
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e621ac58_0b5bee21",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1052,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87fa5511_75f29efd",
      "range": {
        "startLine": 1052,
        "startChar": 6,
        "endLine": 1052,
        "endChar": 25
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b8a6cd_c43e392b",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1091,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Don\u0027t need this one, as it will be handled by `pldm_msgbuf_init_cc()` below.",
      "range": {
        "startLine": 1091,
        "startChar": 43,
        "endLine": 1091,
        "endChar": 61
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c77f2581_f7676f77",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1091,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b8a6cd_c43e392b",
      "range": {
        "startLine": 1091,
        "startChar": 43,
        "endLine": 1091,
        "endChar": 61
      },
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427cbde5_b7e83fd1",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1107,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "And this becomes `return 0`.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "470998c9_a3f11d3d",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1107,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "427cbde5_b7e83fd1",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e964c8e_5c87a5a3",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "Maybe we can add a helper to extract a string for this.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a548f5f_994c1152",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1155,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Yes, I think that will be more elegant, I\u0027ll have to do some calculation for the real data length in my code for now, like this:\n```\npldm_msgbuf_extract_array_uint8(\n\t\tbuf, entry-\u003eactive_comp_release_date,\n\t\tPLDM_FWUP_COMPONENT_RELEASE_DATA_LEN -\n\t\t\t1 /*minus the null terminator*/);\n```\n\nBut I think this should be a seperate commit for refactoring purpose?",
      "parentUuid": "4e964c8e_5c87a5a3",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eac453b_7f062009",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-21T01:10:54Z",
      "side": 1,
      "message": "Well, I\u0027m concerned about the types. Whether `char` is signed or unsigned is platform-dependent, but `uint8_t` is always unsigned.\n\nAre you happy to add an implementation of `pldm_msgbuf_extract_array_char()`?",
      "parentUuid": "0a548f5f_994c1152",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72da6a3a_9bd286ec",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1155,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-21T06:30:51Z",
      "side": 1,
      "message": "Done, add `pldm_msgbuf_extract_array_char()` and related test cases, please let me know if there is any concern.",
      "parentUuid": "2eac453b_7f062009",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bea29c26_34518d14",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-02T06:27:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72da6a3a_9bd286ec",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a84c1d8_5fb54cf3",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1181,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "This should be `pldm_msgbuf_destroy_consumed()`?",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40c2b153_a83ac41b",
        "filename": "src/dsp/firmware_update.c",
        "patchSetId": 9
      },
      "lineNbr": 1181,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a84c1d8_5fb54cf3",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf5810b1_94e048fb",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1687,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "All the test functions you\u0027ve added should be individually guarded to ensure the tests don\u0027t fail to link when the library is built with `-Dabi\u003ddeprecated,stable`:\n\n```\nFound ninja-1.11.1.git.kitware.jobserver-1 at /home/andrew/.local/bin/ninja\nCleaning... 12 files.\n[58/62] Linking target tests/dsp_firmware_update\nFAILED: tests/dsp_firmware_update \nc++  -o tests/dsp_firmware_update tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o -Wl,--as-needed -Wl,--no-undefined \u0027-Wl,-rpath,$ORIGIN/../src\u0027 -Wl,-rpath-link,/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/src -Wl,--start-group src/libpldm.so.0.8.0 subprojects/googletest/libgtest.a subprojects/googletest/libgtest_main.a subprojects/googletest/libgmock.a -Wl,--end-group -pthread\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_goodPathEncodeRequest_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1697:(.text+0x105b4): undefined reference to `encode_get_downstream_firmware_params_req\u0027\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_encodeRequestInvalidTransferOperationFlag_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1719:(.text+0x10808): undefined reference to `encode_get_downstream_firmware_params_req\u0027\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_encodeRequestErrorBufSize_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1739:(.text+0x1095e): undefined reference to `encode_get_downstream_firmware_params_req\u0027\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_goodPathDecodeResponse_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1797:(.text+0x13059): undefined reference to `decode_get_downstream_firmware_params_resp\u0027\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_decodeResponseInvalidLength_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1865:(.text+0x15ed2): undefined reference to `decode_get_downstream_firmware_params_resp\u0027\n/usr/bin/ld: /home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1889:(.text+0x16177): undefined reference to `decode_downstream_device_parameter_table_entry\u0027\n/usr/bin/ld: tests/dsp_firmware_update.p/dsp_firmware_update.cpp.o: in function `GetDownstreamFirmwareParameters_goodPathDecodeDownstreamDeivceParamTable_Test::TestBody()\u0027:\n/home/andrew/src/openbmc.org/openbmc/libpldm/origin/tmp.cvHWAXriQc/../tests/dsp/firmware_update.cpp:1954:(.text+0x1be55): undefined reference to `decode_downstream_device_parameter_table_entry\u0027\ncollect2: error: ld returned 1 exit status\n[62/62] Linking target tests/oem_ibm_fileio\nninja: build stopped: subcommand failed.\n```\n\nThis issue is caught by running `./scripts/pre-submit`.\n\nFor an example of how to resolve this issue, see the way this change guards each test:\n\nhttps://github.com/openbmc/libpldm/commit/a6fa5559a934a887f436a1011de8ba5554221b60#diff-e0782f432277f708536334f4fbbae580d428042a8f6c18819078de9e22d5c1fe\n\nThis approach allows us to stabilise each API individually.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b81dde4a_3149274d",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1687,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf5810b1_94e048fb",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32287215_d648a667",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1883,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "You need to make this conditional on `NDEBUG` being defined. If you run `./scripts/pre-submit` this assertion will fail when the build is configured with `--buildtype\u003drelease`:\n\n```\n[ RUN      ] GetDownstreamFirmwareParameters.decodeResponseInvalidLength\n../tests/dsp/firmware_update.cpp:1883: Failure\nDeath test: decode_downstream_device_parameter_table_entry( currentDevice, paramTableLen, \u0026entry, \u0026activeCompVerStr, \u0026pendingCompVerStr)\n    Result: failed to die.\n Error msg:\n[  DEATH   ]\n\n[  FAILED  ] GetDownstreamFirmwareParameters.decodeResponseInvalidLength (0 ms)\n```\nSee how this change solves the problem:\n\nhttps://github.com/openbmc/libpldm/commit/fbaea23332f750c7c67d6fec6144df2fc3f90f2a",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "017c4a00_6c1ad898",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1883,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "Done, thanks for the hint, I\u0027ve run the script locally and all tests passed.",
      "parentUuid": "32287215_d648a667",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84529b0d_3718be37",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1938,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-18T01:08:28Z",
      "side": 1,
      "message": "We can probably add helpers for string insertion as well.",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "783ac1b4_af309ea0",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1938,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-20T09:34:14Z",
      "side": 1,
      "message": "I think this should be a seperate commit for refactoring purpose?",
      "parentUuid": "84529b0d_3718be37",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b8c98a0_488bf660",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1938,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-21T01:10:54Z",
      "side": 1,
      "message": "No, the types need to be correct in this patch, as it affects the public API of the library.",
      "parentUuid": "783ac1b4_af309ea0",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fd4e77a_a2a8b6a6",
        "filename": "tests/dsp/firmware_update.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1938,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2024-06-21T06:30:51Z",
      "side": 1,
      "message": "Done, added helper `pldm_msgbuf_insert_array_char`, added related test cases to reach 100% line coverage (verified by local-ci-build).",
      "parentUuid": "8b8c98a0_488bf660",
      "revId": "85358b17986dc127781845d06ff46e51fd7a8418",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}