{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5abd749a_8332171c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Can you please be more explicit about the relationships? How is the abstraction structured? Adding a mermaid class diagram description into the commit message would be particularly helpful.",
      "range": {
        "startLine": 9,
        "startChar": 4,
        "endLine": 10,
        "endChar": 45
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ffa2c73_323f2a25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Can you list some examples in the commit message of existing APIs that provide this facility?",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 11,
        "endChar": 63
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "076ae4df_ebb59fd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Needs a space after the full-stop.",
      "range": {
        "startLine": 15,
        "startChar": 48,
        "endLine": 15,
        "endChar": 55
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9ec71f4_0146eea3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Can you please be more specific about what this means in practice? Adding links to examples in the openbmc/pldm code would be particularly helpful.",
      "range": {
        "startLine": 16,
        "startChar": 5,
        "endLine": 18,
        "endChar": 10
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4aa8bbe_276c8ea8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "\"Can\" and \"should\" are similar but different. Why should this be the case? Again, can you link to examples of such uses in the commit message?",
      "range": {
        "startLine": 19,
        "startChar": 40,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81bc9c42_6525d3d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "I\u0027d argue the API you\u0027re proposing is the opposite of refined - it is quite powerful with its lack of constraints.\n\nI\u0027m still trying to understand why it\u0027s not possible to effectively build up the tree using the existing APIs.",
      "range": {
        "startLine": 22,
        "startChar": 9,
        "endLine": 23,
        "endChar": 63
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd5b3227_05ee1f68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Please demonstrate how here in the commit message. What\u0027s the necessary sequence without the new API and why is it ineffective? Contrast this to the sequence that\u0027s possible with the new API, and discuss why it\u0027s more effective.",
      "range": {
        "startLine": 29,
        "startChar": 42,
        "endLine": 30,
        "endChar": 49
      },
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdd35d8a_120fe5a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-04-10T00:35:26Z",
      "side": 1,
      "message": "Hi Kamalkumar, I\u0027m still trying to ensure I have a complete understanding of the motvations. Thanks for the improvements to the commit message. However, I do have some more discussion points there ðŸ˜Š",
      "revId": "d53abbf360d92a0427e8c70616e316be242d57a3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}